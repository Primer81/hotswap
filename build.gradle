buildscript {
    repositories {
        jcenter()
        maven { url = 'http://files.minecraftforge.net/maven' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

repositories {
    maven { url = 'https://minecraft.curseforge.com/api/maven' }
}

apply plugin: 'net.minecraftforge.gradle.forge'
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

// Version information
ext {
    mcVersion = '1.12.2'
    forgeVersion = '14.23.4.2710'
    modVersion = '0.1'
    mcpMappings = 'snapshot_20171003'
}

// JAR filenames and Maven coordinates
archivesBaseName = 'hotswap'
group = 'jobicade.hotswap'
version = "${project.ext.mcVersion}-${project.ext.modVersion}"

minecraft {
    version = "${project.ext.mcVersion}-${project.ext.forgeVersion}"
    mappings = project.ext.mcpMappings
    runDir = 'run'
    useDepAts = true
}

dependencies {
    provided "inventory-tweaks:InventoryTweaks:1.63:deobf"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property 'modVersion', project.version
    inputs.property 'mcVersion', project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand project.ext.properties
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// Generate deobf jar
task deobfJar(type: Jar, dependsOn: classes) {
    classifier = 'dev'
    from sourceSets.main.output
}
build.dependsOn deobfJar

// Extract ATs from anywhere in dependency jars (for InvTweaks)
task extractAllDependencyATs(type: Copy) {
    includeEmptyDirs = false

    configurations.provided.each {
        def jarBasename = basename(it.name)

        from zipTree(it).matching {
            include '**/*_at.cfg'
        }
        eachFile {path = "${name}_${jarBasename}_at.cfg"}
    }
    into "$buildDir/depAts"
}

/*
 * This is pretty useless as ForgeGradle seems to search for ATs
 * before any tasks can run. To get the correct result, run this task
 * in its own command, then setupDecompWorkspace
 */
extractDependencyATs.dependsOn extractAllDependencyATs

def basename(name) {
    def i = name.lastIndexOf('.')
    i != -1 ? name.substring(0, i) : name
}
